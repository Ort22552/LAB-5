
Plantilla.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008a4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  00000918  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000948  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b0e  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000759  00000000  00000000  0000152e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bd3  00000000  00000000  00001c87  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  0000285c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ff  00000000  00000000  00002998  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000775  00000000  00000000  00002e97  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000360c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 b2 00 	jmp	0x164	; 0x164 <__vector_16>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__vector_21>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	b4 01       	movw	r22, r8
  6a:	bb 01       	movw	r22, r22
  6c:	c2 01       	movw	r24, r4
  6e:	c9 01       	movw	r24, r18
  70:	d0 01       	movw	r26, r0
  72:	d7 01       	movw	r26, r14
  74:	de 01       	movw	r26, r28
  76:	e5 01       	movw	r28, r10
  78:	21 02       	muls	r18, r17
  7a:	2c 02       	muls	r18, r28
  7c:	3a 02       	muls	r19, r26
  7e:	48 02       	muls	r20, r24
  80:	56 02       	muls	r21, r22
  82:	64 02       	muls	r22, r20
  84:	72 02       	muls	r23, r18
  86:	7b 02       	muls	r23, r27
  88:	a5 02       	muls	r26, r21
  8a:	ab 02       	muls	r26, r27
  8c:	b1 02       	muls	r27, r17
  8e:	b7 02       	muls	r27, r23
  90:	bd 02       	muls	r27, r29
  92:	c8 02       	muls	r28, r24
  94:	d3 02       	muls	r29, r19
  96:	de 02       	muls	r29, r30
  98:	e9 02       	muls	r30, r25
  9a:	f4 02       	muls	r31, r20

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_clear_bss>:
  a8:	21 e0       	ldi	r18, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
  b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
  b2:	a5 30       	cpi	r26, 0x05	; 5
  b4:	b2 07       	cpc	r27, r18
  b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
  b8:	0e 94 85 00 	call	0x10a	; 0x10a <main>
  bc:	0c 94 50 04 	jmp	0x8a0	; 0x8a0 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <setup>:
	------------------------------------------------------
	PROGRAMACION DE FUNCIONES
	------------------------------------------------------
*/
	void setup(void){
	cli();
  c4:	f8 94       	cli
	SetupADC(PC1);
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	0e 94 17 02 	call	0x42e	; 0x42e <SetupADC>
	SetupADC(PC6);
  cc:	86 e0       	ldi	r24, 0x06	; 6
  ce:	0e 94 17 02 	call	0x42e	; 0x42e <SetupADC>
	SetupADC(PC0);
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	0e 94 17 02 	call	0x42e	; 0x42e <SetupADC>
	SetupTimer0(1024,255);
  d8:	6f ef       	ldi	r22, 0xFF	; 255
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	94 e0       	ldi	r25, 0x04	; 4
  de:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <SetupTimer0>
	SetupPWM1(Fast8,Positivo,A,1024);	
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	34 e0       	ldi	r19, 0x04	; 4
  e6:	40 e0       	ldi	r20, 0x00	; 0
  e8:	61 e0       	ldi	r22, 0x01	; 1
  ea:	85 e0       	ldi	r24, 0x05	; 5
  ec:	0e 94 97 02 	call	0x52e	; 0x52e <SetupPWM1>
	SetupPWM2(Fast8,Positivo,A,1024);
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	34 e0       	ldi	r19, 0x04	; 4
  f4:	40 e0       	ldi	r20, 0x00	; 0
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	85 e0       	ldi	r24, 0x05	; 5
  fa:	0e 94 85 03 	call	0x70a	; 0x70a <SetupPWM2>
	SetupSalida(D, PD4);
  fe:	64 e0       	ldi	r22, 0x04	; 4
 100:	83 e0       	ldi	r24, 0x03	; 3
 102:	0e 94 1e 01 	call	0x23c	; 0x23c <SetupSalida>
	sei();
 106:	78 94       	sei
 108:	08 95       	ret

0000010a <main>:
	------------------------------------------------------
*/

int main(void)
{
    setup();
 10a:	0e 94 62 00 	call	0xc4	; 0xc4 <setup>
    while (1) 
    {

		PWMFALSO++; 
 10e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <PWMFALSO>
 112:	8f 5f       	subi	r24, 0xFF	; 255
 114:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <PWMFALSO>
		OCR1A =  ValorADC1/6;
 118:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <ValorADC1>
 11c:	2b ea       	ldi	r18, 0xAB	; 171
 11e:	82 9f       	mul	r24, r18
 120:	81 2d       	mov	r24, r1
 122:	11 24       	eor	r1, r1
 124:	86 95       	lsr	r24
 126:	86 95       	lsr	r24
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 12e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		OCR2A= ValorADC2/6;
 132:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <ValorADC2>
 136:	82 9f       	mul	r24, r18
 138:	81 2d       	mov	r24, r1
 13a:	11 24       	eor	r1, r1
 13c:	86 95       	lsr	r24
 13e:	86 95       	lsr	r24
 140:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
		if (PWMFALSO == 0)
 144:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <PWMFALSO>
 148:	81 11       	cpse	r24, r1
 14a:	04 c0       	rjmp	.+8      	; 0x154 <main+0x4a>
		{
			PORTD |= (1<<PORTD4);
 14c:	8b b1       	in	r24, 0x0b	; 11
 14e:	80 61       	ori	r24, 0x10	; 16
 150:	8b b9       	out	0x0b, r24	; 11
 152:	dd cf       	rjmp	.-70     	; 0x10e <main+0x4>
		}
		else if (PWMFALSO == (ValorADC3))
 154:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <ValorADC3>
 158:	89 13       	cpse	r24, r25
 15a:	d9 cf       	rjmp	.-78     	; 0x10e <main+0x4>
		{
			PORTD &= ~(1<<PORTD4);
 15c:	8b b1       	in	r24, 0x0b	; 11
 15e:	8f 7e       	andi	r24, 0xEF	; 239
 160:	8b b9       	out	0x0b, r24	; 11
 162:	d5 cf       	rjmp	.-86     	; 0x10e <main+0x4>

00000164 <__vector_16>:
/*
	------------------------------------------------------
	INTERRUPCIONES
	------------------------------------------------------
*/
ISR(TIMER0_OVF_vect){
 164:	1f 92       	push	r1
 166:	0f 92       	push	r0
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	0f 92       	push	r0
 16c:	11 24       	eor	r1, r1
 16e:	8f 93       	push	r24
 170:	ef 93       	push	r30
 172:	ff 93       	push	r31
	switch (Turno)
 174:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 178:	81 30       	cpi	r24, 0x01	; 1
 17a:	69 f0       	breq	.+26     	; 0x196 <__vector_16+0x32>
 17c:	18 f0       	brcs	.+6      	; 0x184 <__vector_16+0x20>
 17e:	82 30       	cpi	r24, 0x02	; 2
 180:	b1 f0       	breq	.+44     	; 0x1ae <__vector_16+0x4a>
 182:	1f c0       	rjmp	.+62     	; 0x1c2 <__vector_16+0x5e>
	{
	case 0:
		Turno=1;
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		ADMUX &= ~((1<<MUX2)|(1<<MUX1)|(1<<MUX0));
 18a:	ec e7       	ldi	r30, 0x7C	; 124
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	88 7f       	andi	r24, 0xF8	; 248
 192:	80 83       	st	Z, r24
		break;
 194:	16 c0       	rjmp	.+44     	; 0x1c2 <__vector_16+0x5e>
	case 1:
		Turno=2;
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		ADMUX &= ~((1<<MUX2)|(1<<MUX1)|(1<<MUX0));
 19c:	ec e7       	ldi	r30, 0x7C	; 124
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	88 7f       	andi	r24, 0xF8	; 248
 1a4:	80 83       	st	Z, r24
		ADMUX |= (1<<MUX2)|(1<<MUX1);
 1a6:	80 81       	ld	r24, Z
 1a8:	86 60       	ori	r24, 0x06	; 6
 1aa:	80 83       	st	Z, r24
		break;
 1ac:	0a c0       	rjmp	.+20     	; 0x1c2 <__vector_16+0x5e>
	case 2:
		Turno=0;
 1ae:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		ADMUX &= ~((1<<MUX2)|(1<<MUX1)|(1<<MUX0));
 1b2:	ec e7       	ldi	r30, 0x7C	; 124
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	88 7f       	andi	r24, 0xF8	; 248
 1ba:	80 83       	st	Z, r24
		ADMUX|=(1<<MUX0);
 1bc:	80 81       	ld	r24, Z
 1be:	81 60       	ori	r24, 0x01	; 1
 1c0:	80 83       	st	Z, r24
		break;
	}
	ADCSRA |= (1<<ADSC);
 1c2:	ea e7       	ldi	r30, 0x7A	; 122
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	80 64       	ori	r24, 0x40	; 64
 1ca:	80 83       	st	Z, r24
	TCNT0 = 255;
 1cc:	8f ef       	ldi	r24, 0xFF	; 255
 1ce:	86 bd       	out	0x26, r24	; 38
	TIFR0 |= (1 << TOV0);
 1d0:	85 b3       	in	r24, 0x15	; 21
 1d2:	81 60       	ori	r24, 0x01	; 1
 1d4:	85 bb       	out	0x15, r24	; 21
}
 1d6:	ff 91       	pop	r31
 1d8:	ef 91       	pop	r30
 1da:	8f 91       	pop	r24
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <__vector_21>:

ISR(ADC_vect){
 1e6:	1f 92       	push	r1
 1e8:	0f 92       	push	r0
 1ea:	0f b6       	in	r0, 0x3f	; 63
 1ec:	0f 92       	push	r0
 1ee:	11 24       	eor	r1, r1
 1f0:	8f 93       	push	r24
 1f2:	ef 93       	push	r30
 1f4:	ff 93       	push	r31
	switch (Turno)
 1f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1fa:	81 30       	cpi	r24, 0x01	; 1
 1fc:	49 f0       	breq	.+18     	; 0x210 <__vector_21+0x2a>
 1fe:	18 f0       	brcs	.+6      	; 0x206 <__vector_21+0x20>
 200:	82 30       	cpi	r24, 0x02	; 2
 202:	59 f0       	breq	.+22     	; 0x21a <__vector_21+0x34>
 204:	0e c0       	rjmp	.+28     	; 0x222 <__vector_21+0x3c>
	{
	case 0:
		ValorADC1 = ADCH;
 206:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 20a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <ValorADC1>
		break;
 20e:	09 c0       	rjmp	.+18     	; 0x222 <__vector_21+0x3c>
	case 1:
		ValorADC2 = ADCH;
 210:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 214:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <ValorADC2>
		break;
 218:	04 c0       	rjmp	.+8      	; 0x222 <__vector_21+0x3c>
	case 2:
		ValorADC3 = ADCH;
 21a:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 21e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <ValorADC3>
		break;
	}
	ADCSRA |= (1<<ADIF);
 222:	ea e7       	ldi	r30, 0x7A	; 122
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	80 61       	ori	r24, 0x10	; 16
 22a:	80 83       	st	Z, r24
 22c:	ff 91       	pop	r31
 22e:	ef 91       	pop	r30
 230:	8f 91       	pop	r24
 232:	0f 90       	pop	r0
 234:	0f be       	out	0x3f, r0	; 63
 236:	0f 90       	pop	r0
 238:	1f 90       	pop	r1
 23a:	18 95       	reti

0000023c <SetupSalida>:
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
	//HABILITAR
	ADCSRA |= (1<<ADEN);
}

void SetupPWM0(uint8_t ModoPWM0, uint8_t Sentido0, uint8_t SaidaPMW0, uint16_t PrescalerPWM0){
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	99 f4       	brne	.+38     	; 0x266 <SetupSalida+0x2a>
 240:	62 30       	cpi	r22, 0x02	; 2
 242:	49 f0       	breq	.+18     	; 0x256 <SetupSalida+0x1a>
 244:	63 30       	cpi	r22, 0x03	; 3
 246:	59 f0       	breq	.+22     	; 0x25e <SetupSalida+0x22>
 248:	61 30       	cpi	r22, 0x01	; 1
 24a:	09 f0       	breq	.+2      	; 0x24e <SetupSalida+0x12>
 24c:	c4 c0       	rjmp	.+392    	; 0x3d6 <SetupSalida+0x19a>
 24e:	8f ef       	ldi	r24, 0xFF	; 255
 250:	84 b9       	out	0x04, r24	; 4
 252:	15 b8       	out	0x05, r1	; 5
 254:	08 95       	ret
 256:	8f ef       	ldi	r24, 0xFF	; 255
 258:	87 b9       	out	0x07, r24	; 7
 25a:	18 b8       	out	0x08, r1	; 8
 25c:	08 95       	ret
 25e:	8f ef       	ldi	r24, 0xFF	; 255
 260:	8a b9       	out	0x0a, r24	; 10
 262:	1b b8       	out	0x0b, r1	; 11
 264:	08 95       	ret
 266:	81 30       	cpi	r24, 0x01	; 1
 268:	c1 f5       	brne	.+112    	; 0x2da <SetupSalida+0x9e>
 26a:	62 30       	cpi	r22, 0x02	; 2
 26c:	d1 f0       	breq	.+52     	; 0x2a2 <SetupSalida+0x66>
 26e:	28 f4       	brcc	.+10     	; 0x27a <SetupSalida+0x3e>
 270:	66 23       	and	r22, r22
 272:	49 f0       	breq	.+18     	; 0x286 <SetupSalida+0x4a>
 274:	61 30       	cpi	r22, 0x01	; 1
 276:	71 f0       	breq	.+28     	; 0x294 <SetupSalida+0x58>
 278:	08 95       	ret
 27a:	64 30       	cpi	r22, 0x04	; 4
 27c:	01 f1       	breq	.+64     	; 0x2be <SetupSalida+0x82>
 27e:	c0 f0       	brcs	.+48     	; 0x2b0 <SetupSalida+0x74>
 280:	65 30       	cpi	r22, 0x05	; 5
 282:	21 f1       	breq	.+72     	; 0x2cc <SetupSalida+0x90>
 284:	08 95       	ret
 286:	84 b1       	in	r24, 0x04	; 4
 288:	81 60       	ori	r24, 0x01	; 1
 28a:	84 b9       	out	0x04, r24	; 4
 28c:	85 b1       	in	r24, 0x05	; 5
 28e:	8e 7f       	andi	r24, 0xFE	; 254
 290:	85 b9       	out	0x05, r24	; 5
 292:	08 95       	ret
 294:	84 b1       	in	r24, 0x04	; 4
 296:	82 60       	ori	r24, 0x02	; 2
 298:	84 b9       	out	0x04, r24	; 4
 29a:	85 b1       	in	r24, 0x05	; 5
 29c:	8d 7f       	andi	r24, 0xFD	; 253
 29e:	85 b9       	out	0x05, r24	; 5
 2a0:	08 95       	ret
 2a2:	84 b1       	in	r24, 0x04	; 4
 2a4:	84 60       	ori	r24, 0x04	; 4
 2a6:	84 b9       	out	0x04, r24	; 4
 2a8:	85 b1       	in	r24, 0x05	; 5
 2aa:	8b 7f       	andi	r24, 0xFB	; 251
 2ac:	85 b9       	out	0x05, r24	; 5
 2ae:	08 95       	ret
 2b0:	84 b1       	in	r24, 0x04	; 4
 2b2:	88 60       	ori	r24, 0x08	; 8
 2b4:	84 b9       	out	0x04, r24	; 4
 2b6:	85 b1       	in	r24, 0x05	; 5
 2b8:	87 7f       	andi	r24, 0xF7	; 247
 2ba:	85 b9       	out	0x05, r24	; 5
 2bc:	08 95       	ret
 2be:	84 b1       	in	r24, 0x04	; 4
 2c0:	80 61       	ori	r24, 0x10	; 16
 2c2:	84 b9       	out	0x04, r24	; 4
 2c4:	85 b1       	in	r24, 0x05	; 5
 2c6:	8f 7e       	andi	r24, 0xEF	; 239
 2c8:	85 b9       	out	0x05, r24	; 5
 2ca:	08 95       	ret
 2cc:	84 b1       	in	r24, 0x04	; 4
 2ce:	80 62       	ori	r24, 0x20	; 32
 2d0:	84 b9       	out	0x04, r24	; 4
 2d2:	85 b1       	in	r24, 0x05	; 5
 2d4:	8f 7d       	andi	r24, 0xDF	; 223
 2d6:	85 b9       	out	0x05, r24	; 5
 2d8:	08 95       	ret
 2da:	82 30       	cpi	r24, 0x02	; 2
 2dc:	c1 f5       	brne	.+112    	; 0x34e <SetupSalida+0x112>
 2de:	62 30       	cpi	r22, 0x02	; 2
 2e0:	d1 f0       	breq	.+52     	; 0x316 <SetupSalida+0xda>
 2e2:	28 f4       	brcc	.+10     	; 0x2ee <SetupSalida+0xb2>
 2e4:	66 23       	and	r22, r22
 2e6:	49 f0       	breq	.+18     	; 0x2fa <SetupSalida+0xbe>
 2e8:	61 30       	cpi	r22, 0x01	; 1
 2ea:	71 f0       	breq	.+28     	; 0x308 <SetupSalida+0xcc>
 2ec:	08 95       	ret
 2ee:	64 30       	cpi	r22, 0x04	; 4
 2f0:	01 f1       	breq	.+64     	; 0x332 <SetupSalida+0xf6>
 2f2:	c0 f0       	brcs	.+48     	; 0x324 <SetupSalida+0xe8>
 2f4:	65 30       	cpi	r22, 0x05	; 5
 2f6:	21 f1       	breq	.+72     	; 0x340 <SetupSalida+0x104>
 2f8:	08 95       	ret
 2fa:	87 b1       	in	r24, 0x07	; 7
 2fc:	81 60       	ori	r24, 0x01	; 1
 2fe:	87 b9       	out	0x07, r24	; 7
 300:	88 b1       	in	r24, 0x08	; 8
 302:	8e 7f       	andi	r24, 0xFE	; 254
 304:	88 b9       	out	0x08, r24	; 8
 306:	08 95       	ret
 308:	87 b1       	in	r24, 0x07	; 7
 30a:	82 60       	ori	r24, 0x02	; 2
 30c:	87 b9       	out	0x07, r24	; 7
 30e:	88 b1       	in	r24, 0x08	; 8
 310:	8d 7f       	andi	r24, 0xFD	; 253
 312:	88 b9       	out	0x08, r24	; 8
 314:	08 95       	ret
 316:	87 b1       	in	r24, 0x07	; 7
 318:	84 60       	ori	r24, 0x04	; 4
 31a:	87 b9       	out	0x07, r24	; 7
 31c:	88 b1       	in	r24, 0x08	; 8
 31e:	8b 7f       	andi	r24, 0xFB	; 251
 320:	88 b9       	out	0x08, r24	; 8
 322:	08 95       	ret
 324:	87 b1       	in	r24, 0x07	; 7
 326:	88 60       	ori	r24, 0x08	; 8
 328:	87 b9       	out	0x07, r24	; 7
 32a:	88 b1       	in	r24, 0x08	; 8
 32c:	87 7f       	andi	r24, 0xF7	; 247
 32e:	88 b9       	out	0x08, r24	; 8
 330:	08 95       	ret
 332:	87 b1       	in	r24, 0x07	; 7
 334:	80 61       	ori	r24, 0x10	; 16
 336:	87 b9       	out	0x07, r24	; 7
 338:	88 b1       	in	r24, 0x08	; 8
 33a:	8f 7e       	andi	r24, 0xEF	; 239
 33c:	88 b9       	out	0x08, r24	; 8
 33e:	08 95       	ret
 340:	87 b1       	in	r24, 0x07	; 7
 342:	80 62       	ori	r24, 0x20	; 32
 344:	87 b9       	out	0x07, r24	; 7
 346:	88 b1       	in	r24, 0x08	; 8
 348:	8f 7d       	andi	r24, 0xDF	; 223
 34a:	88 b9       	out	0x08, r24	; 8
 34c:	08 95       	ret
 34e:	83 30       	cpi	r24, 0x03	; 3
 350:	09 f0       	breq	.+2      	; 0x354 <SetupSalida+0x118>
 352:	41 c0       	rjmp	.+130    	; 0x3d6 <SetupSalida+0x19a>
 354:	86 2f       	mov	r24, r22
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	88 30       	cpi	r24, 0x08	; 8
 35a:	91 05       	cpc	r25, r1
 35c:	e0 f5       	brcc	.+120    	; 0x3d6 <SetupSalida+0x19a>
 35e:	fc 01       	movw	r30, r24
 360:	ec 5c       	subi	r30, 0xCC	; 204
 362:	ff 4f       	sbci	r31, 0xFF	; 255
 364:	0c 94 4a 04 	jmp	0x894	; 0x894 <__tablejump2__>
 368:	8a b1       	in	r24, 0x0a	; 10
 36a:	81 60       	ori	r24, 0x01	; 1
 36c:	8a b9       	out	0x0a, r24	; 10
 36e:	8b b1       	in	r24, 0x0b	; 11
 370:	8e 7f       	andi	r24, 0xFE	; 254
 372:	8b b9       	out	0x0b, r24	; 11
 374:	08 95       	ret
 376:	8a b1       	in	r24, 0x0a	; 10
 378:	82 60       	ori	r24, 0x02	; 2
 37a:	8a b9       	out	0x0a, r24	; 10
 37c:	8b b1       	in	r24, 0x0b	; 11
 37e:	8d 7f       	andi	r24, 0xFD	; 253
 380:	8b b9       	out	0x0b, r24	; 11
 382:	08 95       	ret
 384:	8a b1       	in	r24, 0x0a	; 10
 386:	84 60       	ori	r24, 0x04	; 4
 388:	8a b9       	out	0x0a, r24	; 10
 38a:	8b b1       	in	r24, 0x0b	; 11
 38c:	8b 7f       	andi	r24, 0xFB	; 251
 38e:	8b b9       	out	0x0b, r24	; 11
 390:	08 95       	ret
 392:	8a b1       	in	r24, 0x0a	; 10
 394:	88 60       	ori	r24, 0x08	; 8
 396:	8a b9       	out	0x0a, r24	; 10
 398:	8b b1       	in	r24, 0x0b	; 11
 39a:	87 7f       	andi	r24, 0xF7	; 247
 39c:	8b b9       	out	0x0b, r24	; 11
 39e:	08 95       	ret
 3a0:	8a b1       	in	r24, 0x0a	; 10
 3a2:	80 61       	ori	r24, 0x10	; 16
 3a4:	8a b9       	out	0x0a, r24	; 10
 3a6:	8b b1       	in	r24, 0x0b	; 11
 3a8:	8f 7e       	andi	r24, 0xEF	; 239
 3aa:	8b b9       	out	0x0b, r24	; 11
 3ac:	08 95       	ret
 3ae:	8a b1       	in	r24, 0x0a	; 10
 3b0:	80 62       	ori	r24, 0x20	; 32
 3b2:	8a b9       	out	0x0a, r24	; 10
 3b4:	8b b1       	in	r24, 0x0b	; 11
 3b6:	8f 7d       	andi	r24, 0xDF	; 223
 3b8:	8b b9       	out	0x0b, r24	; 11
 3ba:	08 95       	ret
 3bc:	8a b1       	in	r24, 0x0a	; 10
 3be:	80 64       	ori	r24, 0x40	; 64
 3c0:	8a b9       	out	0x0a, r24	; 10
 3c2:	8b b1       	in	r24, 0x0b	; 11
 3c4:	8f 7b       	andi	r24, 0xBF	; 191
 3c6:	8b b9       	out	0x0b, r24	; 11
 3c8:	08 95       	ret
 3ca:	8a b1       	in	r24, 0x0a	; 10
 3cc:	80 68       	ori	r24, 0x80	; 128
 3ce:	8a b9       	out	0x0a, r24	; 10
 3d0:	8b b1       	in	r24, 0x0b	; 11
 3d2:	8f 77       	andi	r24, 0x7F	; 127
 3d4:	8b b9       	out	0x0b, r24	; 11
 3d6:	08 95       	ret

000003d8 <SetupTimer0>:
 3d8:	80 34       	cpi	r24, 0x40	; 64
 3da:	91 05       	cpc	r25, r1
 3dc:	b1 f0       	breq	.+44     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3de:	28 f4       	brcc	.+10     	; 0x3ea <SetupTimer0+0x12>
 3e0:	00 97       	sbiw	r24, 0x00	; 0
 3e2:	59 f0       	breq	.+22     	; 0x3fa <SetupTimer0+0x22>
 3e4:	08 97       	sbiw	r24, 0x08	; 8
 3e6:	69 f0       	breq	.+26     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3e8:	1b c0       	rjmp	.+54     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3ea:	81 15       	cp	r24, r1
 3ec:	21 e0       	ldi	r18, 0x01	; 1
 3ee:	92 07       	cpc	r25, r18
 3f0:	81 f0       	breq	.+32     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3f2:	81 15       	cp	r24, r1
 3f4:	94 40       	sbci	r25, 0x04	; 4
 3f6:	89 f0       	breq	.+34     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3f8:	13 c0       	rjmp	.+38     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3fa:	85 b5       	in	r24, 0x25	; 37
 3fc:	81 60       	ori	r24, 0x01	; 1
 3fe:	85 bd       	out	0x25, r24	; 37
 400:	0f c0       	rjmp	.+30     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 402:	85 b5       	in	r24, 0x25	; 37
 404:	82 60       	ori	r24, 0x02	; 2
 406:	85 bd       	out	0x25, r24	; 37
 408:	0b c0       	rjmp	.+22     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 40a:	85 b5       	in	r24, 0x25	; 37
 40c:	83 60       	ori	r24, 0x03	; 3
 40e:	85 bd       	out	0x25, r24	; 37
 410:	07 c0       	rjmp	.+14     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 412:	85 b5       	in	r24, 0x25	; 37
 414:	84 60       	ori	r24, 0x04	; 4
 416:	85 bd       	out	0x25, r24	; 37
 418:	03 c0       	rjmp	.+6      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 41a:	85 b5       	in	r24, 0x25	; 37
 41c:	85 60       	ori	r24, 0x05	; 5
 41e:	85 bd       	out	0x25, r24	; 37
 420:	66 bd       	out	0x26, r22	; 38
 422:	ee e6       	ldi	r30, 0x6E	; 110
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	81 60       	ori	r24, 0x01	; 1
 42a:	80 83       	st	Z, r24
 42c:	08 95       	ret

0000042e <SetupADC>:
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	88 30       	cpi	r24, 0x08	; 8
 432:	91 05       	cpc	r25, r1
 434:	08 f0       	brcs	.+2      	; 0x438 <SetupADC+0xa>
 436:	67 c0       	rjmp	.+206    	; 0x506 <SetupADC+0xd8>
 438:	fc 01       	movw	r30, r24
 43a:	e4 5c       	subi	r30, 0xC4	; 196
 43c:	ff 4f       	sbci	r31, 0xFF	; 255
 43e:	0c 94 4a 04 	jmp	0x894	; 0x894 <__tablejump2__>
 442:	ee e7       	ldi	r30, 0x7E	; 126
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	80 81       	ld	r24, Z
 448:	81 60       	ori	r24, 0x01	; 1
 44a:	80 83       	st	Z, r24
 44c:	ec e7       	ldi	r30, 0x7C	; 124
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	80 81       	ld	r24, Z
 452:	88 7f       	andi	r24, 0xF8	; 248
 454:	80 83       	st	Z, r24
 456:	57 c0       	rjmp	.+174    	; 0x506 <SetupADC+0xd8>
 458:	ec e7       	ldi	r30, 0x7C	; 124
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	80 81       	ld	r24, Z
 45e:	88 7f       	andi	r24, 0xF8	; 248
 460:	80 83       	st	Z, r24
 462:	80 81       	ld	r24, Z
 464:	81 60       	ori	r24, 0x01	; 1
 466:	80 83       	st	Z, r24
 468:	ee e7       	ldi	r30, 0x7E	; 126
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	80 81       	ld	r24, Z
 46e:	82 60       	ori	r24, 0x02	; 2
 470:	80 83       	st	Z, r24
 472:	49 c0       	rjmp	.+146    	; 0x506 <SetupADC+0xd8>
 474:	ec e7       	ldi	r30, 0x7C	; 124
 476:	f0 e0       	ldi	r31, 0x00	; 0
 478:	80 81       	ld	r24, Z
 47a:	88 7f       	andi	r24, 0xF8	; 248
 47c:	80 83       	st	Z, r24
 47e:	80 81       	ld	r24, Z
 480:	82 60       	ori	r24, 0x02	; 2
 482:	80 83       	st	Z, r24
 484:	ee e7       	ldi	r30, 0x7E	; 126
 486:	f0 e0       	ldi	r31, 0x00	; 0
 488:	80 81       	ld	r24, Z
 48a:	84 60       	ori	r24, 0x04	; 4
 48c:	80 83       	st	Z, r24
 48e:	3b c0       	rjmp	.+118    	; 0x506 <SetupADC+0xd8>
 490:	ec e7       	ldi	r30, 0x7C	; 124
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	80 81       	ld	r24, Z
 496:	88 7f       	andi	r24, 0xF8	; 248
 498:	80 83       	st	Z, r24
 49a:	80 81       	ld	r24, Z
 49c:	83 60       	ori	r24, 0x03	; 3
 49e:	80 83       	st	Z, r24
 4a0:	ee e7       	ldi	r30, 0x7E	; 126
 4a2:	f0 e0       	ldi	r31, 0x00	; 0
 4a4:	80 81       	ld	r24, Z
 4a6:	88 60       	ori	r24, 0x08	; 8
 4a8:	80 83       	st	Z, r24
 4aa:	2d c0       	rjmp	.+90     	; 0x506 <SetupADC+0xd8>
 4ac:	ec e7       	ldi	r30, 0x7C	; 124
 4ae:	f0 e0       	ldi	r31, 0x00	; 0
 4b0:	80 81       	ld	r24, Z
 4b2:	88 7f       	andi	r24, 0xF8	; 248
 4b4:	80 83       	st	Z, r24
 4b6:	80 81       	ld	r24, Z
 4b8:	84 60       	ori	r24, 0x04	; 4
 4ba:	80 83       	st	Z, r24
 4bc:	ee e7       	ldi	r30, 0x7E	; 126
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	80 81       	ld	r24, Z
 4c2:	80 61       	ori	r24, 0x10	; 16
 4c4:	80 83       	st	Z, r24
 4c6:	1f c0       	rjmp	.+62     	; 0x506 <SetupADC+0xd8>
 4c8:	ec e7       	ldi	r30, 0x7C	; 124
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	80 81       	ld	r24, Z
 4ce:	88 7f       	andi	r24, 0xF8	; 248
 4d0:	80 83       	st	Z, r24
 4d2:	80 81       	ld	r24, Z
 4d4:	85 60       	ori	r24, 0x05	; 5
 4d6:	80 83       	st	Z, r24
 4d8:	ee e7       	ldi	r30, 0x7E	; 126
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	80 81       	ld	r24, Z
 4de:	80 62       	ori	r24, 0x20	; 32
 4e0:	80 83       	st	Z, r24
 4e2:	11 c0       	rjmp	.+34     	; 0x506 <SetupADC+0xd8>
 4e4:	ec e7       	ldi	r30, 0x7C	; 124
 4e6:	f0 e0       	ldi	r31, 0x00	; 0
 4e8:	80 81       	ld	r24, Z
 4ea:	88 7f       	andi	r24, 0xF8	; 248
 4ec:	80 83       	st	Z, r24
 4ee:	80 81       	ld	r24, Z
 4f0:	86 60       	ori	r24, 0x06	; 6
 4f2:	80 83       	st	Z, r24
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <SetupADC+0xd8>
 4f6:	ec e7       	ldi	r30, 0x7C	; 124
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	80 81       	ld	r24, Z
 4fc:	88 7f       	andi	r24, 0xF8	; 248
 4fe:	80 83       	st	Z, r24
 500:	80 81       	ld	r24, Z
 502:	87 60       	ori	r24, 0x07	; 7
 504:	80 83       	st	Z, r24
 506:	ec e7       	ldi	r30, 0x7C	; 124
 508:	f0 e0       	ldi	r31, 0x00	; 0
 50a:	80 81       	ld	r24, Z
 50c:	80 62       	ori	r24, 0x20	; 32
 50e:	80 83       	st	Z, r24
 510:	80 81       	ld	r24, Z
 512:	80 64       	ori	r24, 0x40	; 64
 514:	80 83       	st	Z, r24
 516:	ea e7       	ldi	r30, 0x7A	; 122
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	80 81       	ld	r24, Z
 51c:	88 60       	ori	r24, 0x08	; 8
 51e:	80 83       	st	Z, r24
 520:	80 81       	ld	r24, Z
 522:	87 60       	ori	r24, 0x07	; 7
 524:	80 83       	st	Z, r24
 526:	80 81       	ld	r24, Z
 528:	80 68       	ori	r24, 0x80	; 128
 52a:	80 83       	st	Z, r24
 52c:	08 95       	ret

0000052e <SetupPWM1>:
	
}

void SetupPWM1(uint8_t ModoPWM1, uint8_t Sentido1, uint8_t SaidaPMW1, uint16_t PrescalerPWM1){
 52e:	0f 93       	push	r16
 530:	1f 93       	push	r17
 532:	d9 01       	movw	r26, r18
	//MODOS
	switch (ModoPWM1)
 534:	08 2f       	mov	r16, r24
 536:	10 e0       	ldi	r17, 0x00	; 0
 538:	0a 30       	cpi	r16, 0x0A	; 10
 53a:	11 05       	cpc	r17, r1
 53c:	08 f0       	brcs	.+2      	; 0x540 <SetupPWM1+0x12>
 53e:	5e c0       	rjmp	.+188    	; 0x5fc <SetupPWM1+0xce>
 540:	f8 01       	movw	r30, r16
 542:	ec 5b       	subi	r30, 0xBC	; 188
 544:	ff 4f       	sbci	r31, 0xFF	; 255
 546:	0c 94 4a 04 	jmp	0x894	; 0x894 <__tablejump2__>
	{
	case Phase8:
		TCCR1A|=(1<<WGM10);
 54a:	e0 e8       	ldi	r30, 0x80	; 128
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	90 81       	ld	r25, Z
 550:	91 60       	ori	r25, 0x01	; 1
 552:	90 83       	st	Z, r25
		break;
 554:	53 c0       	rjmp	.+166    	; 0x5fc <SetupPWM1+0xce>
	case Phase9:
		TCCR1A|=(1<<WGM11);
 556:	e0 e8       	ldi	r30, 0x80	; 128
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	90 81       	ld	r25, Z
 55c:	92 60       	ori	r25, 0x02	; 2
 55e:	90 83       	st	Z, r25
		break;
 560:	4d c0       	rjmp	.+154    	; 0x5fc <SetupPWM1+0xce>
	case Phase10:
		TCCR1A|=(1<<WGM10)|(1<<WGM11);
 562:	e0 e8       	ldi	r30, 0x80	; 128
 564:	f0 e0       	ldi	r31, 0x00	; 0
 566:	90 81       	ld	r25, Z
 568:	93 60       	ori	r25, 0x03	; 3
 56a:	90 83       	st	Z, r25
		break;
 56c:	47 c0       	rjmp	.+142    	; 0x5fc <SetupPWM1+0xce>
	case PhaseICR:
		TCCR1B|=(1<<WGM13);
 56e:	e1 e8       	ldi	r30, 0x81	; 129
 570:	f0 e0       	ldi	r31, 0x00	; 0
 572:	90 81       	ld	r25, Z
 574:	90 61       	ori	r25, 0x10	; 16
 576:	90 83       	st	Z, r25
		break;
 578:	41 c0       	rjmp	.+130    	; 0x5fc <SetupPWM1+0xce>
	case PhaseOCR:
		TCCR1B|=(1<<WGM13);
 57a:	e1 e8       	ldi	r30, 0x81	; 129
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	90 81       	ld	r25, Z
 580:	90 61       	ori	r25, 0x10	; 16
 582:	90 83       	st	Z, r25
		TCCR1A |=(1<<WGM12);
 584:	e0 e8       	ldi	r30, 0x80	; 128
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	90 81       	ld	r25, Z
 58a:	98 60       	ori	r25, 0x08	; 8
 58c:	90 83       	st	Z, r25
		break;
 58e:	36 c0       	rjmp	.+108    	; 0x5fc <SetupPWM1+0xce>
	case Fast8:
		TCCR1B|=(1<<WGM12);
 590:	e1 e8       	ldi	r30, 0x81	; 129
 592:	f0 e0       	ldi	r31, 0x00	; 0
 594:	90 81       	ld	r25, Z
 596:	98 60       	ori	r25, 0x08	; 8
 598:	90 83       	st	Z, r25
		TCCR1A|=(1<<WGM10);
 59a:	e0 e8       	ldi	r30, 0x80	; 128
 59c:	f0 e0       	ldi	r31, 0x00	; 0
 59e:	90 81       	ld	r25, Z
 5a0:	91 60       	ori	r25, 0x01	; 1
 5a2:	90 83       	st	Z, r25
		break;
 5a4:	2b c0       	rjmp	.+86     	; 0x5fc <SetupPWM1+0xce>
	case Fast9:
		TCCR1B|=(1<<WGM12);
 5a6:	e1 e8       	ldi	r30, 0x81	; 129
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	90 81       	ld	r25, Z
 5ac:	98 60       	ori	r25, 0x08	; 8
 5ae:	90 83       	st	Z, r25
		TCCR1A|=(1<<WGM11);
 5b0:	e0 e8       	ldi	r30, 0x80	; 128
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	90 81       	ld	r25, Z
 5b6:	92 60       	ori	r25, 0x02	; 2
 5b8:	90 83       	st	Z, r25
		break;
 5ba:	20 c0       	rjmp	.+64     	; 0x5fc <SetupPWM1+0xce>
	case Fast10:
		TCCR1B|=(1<<WGM12);
 5bc:	e1 e8       	ldi	r30, 0x81	; 129
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	90 81       	ld	r25, Z
 5c2:	98 60       	ori	r25, 0x08	; 8
 5c4:	90 83       	st	Z, r25
		TCCR1A|=(1<<WGM10)|(1<<WGM11);
 5c6:	e0 e8       	ldi	r30, 0x80	; 128
 5c8:	f0 e0       	ldi	r31, 0x00	; 0
 5ca:	90 81       	ld	r25, Z
 5cc:	93 60       	ori	r25, 0x03	; 3
 5ce:	90 83       	st	Z, r25
		break;
 5d0:	15 c0       	rjmp	.+42     	; 0x5fc <SetupPWM1+0xce>
	case FastICR:
		TCCR1B|=(1<<WGM13)|(1<<WGM12);
 5d2:	e1 e8       	ldi	r30, 0x81	; 129
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	90 81       	ld	r25, Z
 5d8:	98 61       	ori	r25, 0x18	; 24
 5da:	90 83       	st	Z, r25
		TCCR1A|=(1<<WGM11);
 5dc:	e0 e8       	ldi	r30, 0x80	; 128
 5de:	f0 e0       	ldi	r31, 0x00	; 0
 5e0:	90 81       	ld	r25, Z
 5e2:	92 60       	ori	r25, 0x02	; 2
 5e4:	90 83       	st	Z, r25
		break;
 5e6:	0a c0       	rjmp	.+20     	; 0x5fc <SetupPWM1+0xce>
	case FastOCR:
		TCCR1B|=(1<<WGM13)|(1<<WGM12);
 5e8:	e1 e8       	ldi	r30, 0x81	; 129
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	90 81       	ld	r25, Z
 5ee:	98 61       	ori	r25, 0x18	; 24
 5f0:	90 83       	st	Z, r25
		TCCR1A|=(1<<WGM11)|(1<<WGM10);
 5f2:	e0 e8       	ldi	r30, 0x80	; 128
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	90 81       	ld	r25, Z
 5f8:	93 60       	ori	r25, 0x03	; 3
 5fa:	90 83       	st	Z, r25
		break;
	}
	// SENTIDO Y SALIDA
	if ((ModoPWM1==Fast8)|(ModoPWM1==Fast9)|(ModoPWM1==Fast10)|(ModoPWM1==FastICR)|(ModoPWM1==FastOCR))
 5fc:	51 e0       	ldi	r21, 0x01	; 1
 5fe:	2b ef       	ldi	r18, 0xFB	; 251
 600:	28 0f       	add	r18, r24
 602:	22 30       	cpi	r18, 0x02	; 2
 604:	08 f0       	brcs	.+2      	; 0x608 <SetupPWM1+0xda>
 606:	50 e0       	ldi	r21, 0x00	; 0
 608:	31 e0       	ldi	r19, 0x01	; 1
 60a:	87 30       	cpi	r24, 0x07	; 7
 60c:	09 f0       	breq	.+2      	; 0x610 <SetupPWM1+0xe2>
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	91 e0       	ldi	r25, 0x01	; 1
 612:	88 30       	cpi	r24, 0x08	; 8
 614:	09 f0       	breq	.+2      	; 0x618 <SetupPWM1+0xea>
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	21 e0       	ldi	r18, 0x01	; 1
 61a:	89 30       	cpi	r24, 0x09	; 9
 61c:	09 f0       	breq	.+2      	; 0x620 <SetupPWM1+0xf2>
 61e:	20 e0       	ldi	r18, 0x00	; 0
 620:	35 2b       	or	r19, r21
 622:	93 2b       	or	r25, r19
 624:	11 f4       	brne	.+4      	; 0x62a <SetupPWM1+0xfc>
 626:	22 23       	and	r18, r18
 628:	d1 f1       	breq	.+116    	; 0x69e <SetupPWM1+0x170>
	{
		switch (SaidaPMW1)
 62a:	44 23       	and	r20, r20
 62c:	19 f0       	breq	.+6      	; 0x634 <SetupPWM1+0x106>
 62e:	41 30       	cpi	r20, 0x01	; 1
 630:	e1 f0       	breq	.+56     	; 0x66a <SetupPWM1+0x13c>
 632:	35 c0       	rjmp	.+106    	; 0x69e <SetupPWM1+0x170>
		{
			case A:
			switch (Sentido1)
 634:	66 23       	and	r22, r22
 636:	41 f0       	breq	.+16     	; 0x648 <SetupPWM1+0x11a>
 638:	61 30       	cpi	r22, 0x01	; 1
 63a:	59 f4       	brne	.+22     	; 0x652 <SetupPWM1+0x124>
			{
				case Positivo:
					TCCR1A|=(1<<COM1A1);
 63c:	e0 e8       	ldi	r30, 0x80	; 128
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	80 81       	ld	r24, Z
 642:	80 68       	ori	r24, 0x80	; 128
 644:	80 83       	st	Z, r24
				break;
 646:	05 c0       	rjmp	.+10     	; 0x652 <SetupPWM1+0x124>
				case Invertido:
					TCCR1A|=(1<<COM1A1)|(1<<COM1A0);
 648:	e0 e8       	ldi	r30, 0x80	; 128
 64a:	f0 e0       	ldi	r31, 0x00	; 0
 64c:	80 81       	ld	r24, Z
 64e:	80 6c       	ori	r24, 0xC0	; 192
 650:	80 83       	st	Z, r24
				break;
				}
			DDRB |= (1<<PB1);
 652:	84 b1       	in	r24, 0x04	; 4
 654:	82 60       	ori	r24, 0x02	; 2
 656:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PB1);
 658:	85 b1       	in	r24, 0x05	; 5
 65a:	8d 7f       	andi	r24, 0xFD	; 253
 65c:	85 b9       	out	0x05, r24	; 5
			TIMSK1 |= (1<<OCIE1A);
 65e:	ef e6       	ldi	r30, 0x6F	; 111
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	80 81       	ld	r24, Z
 664:	82 60       	ori	r24, 0x02	; 2
 666:	80 83       	st	Z, r24
			break;
 668:	1a c0       	rjmp	.+52     	; 0x69e <SetupPWM1+0x170>
			case B:
			switch (Sentido1)
 66a:	66 23       	and	r22, r22
 66c:	41 f0       	breq	.+16     	; 0x67e <SetupPWM1+0x150>
 66e:	61 30       	cpi	r22, 0x01	; 1
 670:	59 f4       	brne	.+22     	; 0x688 <SetupPWM1+0x15a>
			{
				case Positivo:
				TCCR1A|=(1<<COM1B1);
 672:	e0 e8       	ldi	r30, 0x80	; 128
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	80 81       	ld	r24, Z
 678:	80 62       	ori	r24, 0x20	; 32
 67a:	80 83       	st	Z, r24
				break;
 67c:	05 c0       	rjmp	.+10     	; 0x688 <SetupPWM1+0x15a>
				case Invertido:
				TCCR1A|=(1<<COM1B1)|(1<<COM1B0);
 67e:	e0 e8       	ldi	r30, 0x80	; 128
 680:	f0 e0       	ldi	r31, 0x00	; 0
 682:	80 81       	ld	r24, Z
 684:	80 63       	ori	r24, 0x30	; 48
 686:	80 83       	st	Z, r24
				break;
				}
			DDRB |= (1<<PB2);
 688:	84 b1       	in	r24, 0x04	; 4
 68a:	84 60       	ori	r24, 0x04	; 4
 68c:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PB2);
 68e:	85 b1       	in	r24, 0x05	; 5
 690:	8b 7f       	andi	r24, 0xFB	; 251
 692:	85 b9       	out	0x05, r24	; 5
			TIMSK1 |= (1<<OCIE1B);
 694:	ef e6       	ldi	r30, 0x6F	; 111
 696:	f0 e0       	ldi	r31, 0x00	; 0
 698:	80 81       	ld	r24, Z
 69a:	84 60       	ori	r24, 0x04	; 4
 69c:	80 83       	st	Z, r24
			break;
		}
	}
	// PRESCALER
	switch (PrescalerPWM1)
 69e:	a0 34       	cpi	r26, 0x40	; 64
 6a0:	b1 05       	cpc	r27, r1
 6a2:	d1 f0       	breq	.+52     	; 0x6d8 <SetupPWM1+0x1aa>
 6a4:	28 f4       	brcc	.+10     	; 0x6b0 <SetupPWM1+0x182>
 6a6:	10 97       	sbiw	r26, 0x00	; 0
 6a8:	59 f0       	breq	.+22     	; 0x6c0 <SetupPWM1+0x192>
 6aa:	18 97       	sbiw	r26, 0x08	; 8
 6ac:	79 f0       	breq	.+30     	; 0x6cc <SetupPWM1+0x19e>
 6ae:	25 c0       	rjmp	.+74     	; 0x6fa <SetupPWM1+0x1cc>
 6b0:	a1 15       	cp	r26, r1
 6b2:	81 e0       	ldi	r24, 0x01	; 1
 6b4:	b8 07       	cpc	r27, r24
 6b6:	b1 f0       	breq	.+44     	; 0x6e4 <SetupPWM1+0x1b6>
 6b8:	a1 15       	cp	r26, r1
 6ba:	b4 40       	sbci	r27, 0x04	; 4
 6bc:	c9 f0       	breq	.+50     	; 0x6f0 <SetupPWM1+0x1c2>
 6be:	1d c0       	rjmp	.+58     	; 0x6fa <SetupPWM1+0x1cc>
	{
		case 0:
		TCCR1B |= (1<<CS10);
 6c0:	e1 e8       	ldi	r30, 0x81	; 129
 6c2:	f0 e0       	ldi	r31, 0x00	; 0
 6c4:	80 81       	ld	r24, Z
 6c6:	81 60       	ori	r24, 0x01	; 1
 6c8:	80 83       	st	Z, r24
		break;
 6ca:	17 c0       	rjmp	.+46     	; 0x6fa <SetupPWM1+0x1cc>
		case 8:
		TCCR1B |= (1<<CS11);
 6cc:	e1 e8       	ldi	r30, 0x81	; 129
 6ce:	f0 e0       	ldi	r31, 0x00	; 0
 6d0:	80 81       	ld	r24, Z
 6d2:	82 60       	ori	r24, 0x02	; 2
 6d4:	80 83       	st	Z, r24
		break;
 6d6:	11 c0       	rjmp	.+34     	; 0x6fa <SetupPWM1+0x1cc>
		case 64:
		TCCR1B |= (1<<CS10)|(1<<CS11);
 6d8:	e1 e8       	ldi	r30, 0x81	; 129
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	83 60       	ori	r24, 0x03	; 3
 6e0:	80 83       	st	Z, r24
		break;
 6e2:	0b c0       	rjmp	.+22     	; 0x6fa <SetupPWM1+0x1cc>
		case 256:
		TCCR1B |= (1<<CS12);
 6e4:	e1 e8       	ldi	r30, 0x81	; 129
 6e6:	f0 e0       	ldi	r31, 0x00	; 0
 6e8:	80 81       	ld	r24, Z
 6ea:	84 60       	ori	r24, 0x04	; 4
 6ec:	80 83       	st	Z, r24
		break;
 6ee:	05 c0       	rjmp	.+10     	; 0x6fa <SetupPWM1+0x1cc>
		case 1024:
		TCCR1B |= (1<<CS10)|(1<<CS12);
 6f0:	e1 e8       	ldi	r30, 0x81	; 129
 6f2:	f0 e0       	ldi	r31, 0x00	; 0
 6f4:	80 81       	ld	r24, Z
 6f6:	85 60       	ori	r24, 0x05	; 5
 6f8:	80 83       	st	Z, r24
		break;
	}
	TIMSK1 |= (1<<TOIE1);
 6fa:	ef e6       	ldi	r30, 0x6F	; 111
 6fc:	f0 e0       	ldi	r31, 0x00	; 0
 6fe:	80 81       	ld	r24, Z
 700:	81 60       	ori	r24, 0x01	; 1
 702:	80 83       	st	Z, r24
}
 704:	1f 91       	pop	r17
 706:	0f 91       	pop	r16
 708:	08 95       	ret

0000070a <SetupPWM2>:

void SetupPWM2(uint8_t ModoPWM2, uint8_t Sentido2, uint8_t SaidaPMW2, uint16_t PrescalerPWM2){
	//MODOS
	switch (ModoPWM2)
 70a:	84 30       	cpi	r24, 0x04	; 4
 70c:	79 f0       	breq	.+30     	; 0x72c <SetupPWM2+0x22>
 70e:	18 f4       	brcc	.+6      	; 0x716 <SetupPWM2+0xc>
 710:	88 23       	and	r24, r24
 712:	31 f0       	breq	.+12     	; 0x720 <SetupPWM2+0x16>
 714:	26 c0       	rjmp	.+76     	; 0x762 <SetupPWM2+0x58>
 716:	85 30       	cpi	r24, 0x05	; 5
 718:	a1 f0       	breq	.+40     	; 0x742 <SetupPWM2+0x38>
 71a:	89 30       	cpi	r24, 0x09	; 9
 71c:	c1 f0       	breq	.+48     	; 0x74e <SetupPWM2+0x44>
 71e:	21 c0       	rjmp	.+66     	; 0x762 <SetupPWM2+0x58>
	{
		case Phase8:
		TCCR2A|=(1<<WGM20);
 720:	e0 eb       	ldi	r30, 0xB0	; 176
 722:	f0 e0       	ldi	r31, 0x00	; 0
 724:	90 81       	ld	r25, Z
 726:	91 60       	ori	r25, 0x01	; 1
 728:	90 83       	st	Z, r25
		break;
 72a:	1b c0       	rjmp	.+54     	; 0x762 <SetupPWM2+0x58>
		case PhaseOCR:
		TCCR2B|=(1<<WGM20);
 72c:	e1 eb       	ldi	r30, 0xB1	; 177
 72e:	f0 e0       	ldi	r31, 0x00	; 0
 730:	90 81       	ld	r25, Z
 732:	91 60       	ori	r25, 0x01	; 1
 734:	90 83       	st	Z, r25
		TCCR2A |=(1<<WGM22);
 736:	e0 eb       	ldi	r30, 0xB0	; 176
 738:	f0 e0       	ldi	r31, 0x00	; 0
 73a:	90 81       	ld	r25, Z
 73c:	98 60       	ori	r25, 0x08	; 8
 73e:	90 83       	st	Z, r25
		break;
 740:	10 c0       	rjmp	.+32     	; 0x762 <SetupPWM2+0x58>
		case Fast8:
		TCCR2A|=(1<<WGM20)|(1<<WGM21);
 742:	e0 eb       	ldi	r30, 0xB0	; 176
 744:	f0 e0       	ldi	r31, 0x00	; 0
 746:	90 81       	ld	r25, Z
 748:	93 60       	ori	r25, 0x03	; 3
 74a:	90 83       	st	Z, r25
		break;
 74c:	0a c0       	rjmp	.+20     	; 0x762 <SetupPWM2+0x58>
		case FastOCR:
		TCCR2B|=(1<<WGM22);
 74e:	e1 eb       	ldi	r30, 0xB1	; 177
 750:	f0 e0       	ldi	r31, 0x00	; 0
 752:	90 81       	ld	r25, Z
 754:	98 60       	ori	r25, 0x08	; 8
 756:	90 83       	st	Z, r25
		TCCR2A|=(1<<WGM21)|(1<<WGM20);
 758:	e0 eb       	ldi	r30, 0xB0	; 176
 75a:	f0 e0       	ldi	r31, 0x00	; 0
 75c:	90 81       	ld	r25, Z
 75e:	93 60       	ori	r25, 0x03	; 3
 760:	90 83       	st	Z, r25
		break;
	}
	// SENTIDO Y SALIDA
	if ((ModoPWM2==Fast8)|(ModoPWM2==Fast9)|(ModoPWM2==Fast10)|(ModoPWM2==FastICR)|(ModoPWM2==FastOCR))
 762:	e1 e0       	ldi	r30, 0x01	; 1
 764:	7b ef       	ldi	r23, 0xFB	; 251
 766:	78 0f       	add	r23, r24
 768:	72 30       	cpi	r23, 0x02	; 2
 76a:	08 f0       	brcs	.+2      	; 0x76e <SetupPWM2+0x64>
 76c:	e0 e0       	ldi	r30, 0x00	; 0
 76e:	51 e0       	ldi	r21, 0x01	; 1
 770:	87 30       	cpi	r24, 0x07	; 7
 772:	09 f0       	breq	.+2      	; 0x776 <SetupPWM2+0x6c>
 774:	50 e0       	ldi	r21, 0x00	; 0
 776:	91 e0       	ldi	r25, 0x01	; 1
 778:	88 30       	cpi	r24, 0x08	; 8
 77a:	09 f0       	breq	.+2      	; 0x77e <SetupPWM2+0x74>
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	71 e0       	ldi	r23, 0x01	; 1
 780:	89 30       	cpi	r24, 0x09	; 9
 782:	09 f0       	breq	.+2      	; 0x786 <SetupPWM2+0x7c>
 784:	70 e0       	ldi	r23, 0x00	; 0
 786:	5e 2b       	or	r21, r30
 788:	95 2b       	or	r25, r21
 78a:	11 f4       	brne	.+4      	; 0x790 <SetupPWM2+0x86>
 78c:	77 23       	and	r23, r23
 78e:	d1 f1       	breq	.+116    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
	{
		switch (SaidaPMW2)
 790:	44 23       	and	r20, r20
 792:	19 f0       	breq	.+6      	; 0x79a <SetupPWM2+0x90>
 794:	41 30       	cpi	r20, 0x01	; 1
 796:	e1 f0       	breq	.+56     	; 0x7d0 <SetupPWM2+0xc6>
 798:	35 c0       	rjmp	.+106    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
		{
			case A:
			switch (Sentido2)
 79a:	66 23       	and	r22, r22
 79c:	41 f0       	breq	.+16     	; 0x7ae <SetupPWM2+0xa4>
 79e:	61 30       	cpi	r22, 0x01	; 1
 7a0:	59 f4       	brne	.+22     	; 0x7b8 <SetupPWM2+0xae>
			{
				case Positivo:
				TCCR2A|=(1<<COM2A1);
 7a2:	e0 eb       	ldi	r30, 0xB0	; 176
 7a4:	f0 e0       	ldi	r31, 0x00	; 0
 7a6:	80 81       	ld	r24, Z
 7a8:	80 68       	ori	r24, 0x80	; 128
 7aa:	80 83       	st	Z, r24
				break;
 7ac:	05 c0       	rjmp	.+10     	; 0x7b8 <SetupPWM2+0xae>
				case Invertido:
				TCCR2A|=(1<<COM2A1)|(1<<COM2A0);
 7ae:	e0 eb       	ldi	r30, 0xB0	; 176
 7b0:	f0 e0       	ldi	r31, 0x00	; 0
 7b2:	80 81       	ld	r24, Z
 7b4:	80 6c       	ori	r24, 0xC0	; 192
 7b6:	80 83       	st	Z, r24
				break;
			}
			DDRB |= (1<<PB3);
 7b8:	84 b1       	in	r24, 0x04	; 4
 7ba:	88 60       	ori	r24, 0x08	; 8
 7bc:	84 b9       	out	0x04, r24	; 4
			PORTB &= ~(1<<PB3);
 7be:	85 b1       	in	r24, 0x05	; 5
 7c0:	87 7f       	andi	r24, 0xF7	; 247
 7c2:	85 b9       	out	0x05, r24	; 5
			TIMSK2 |= (1<<OCIE2A);
 7c4:	e0 e7       	ldi	r30, 0x70	; 112
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	80 81       	ld	r24, Z
 7ca:	82 60       	ori	r24, 0x02	; 2
 7cc:	80 83       	st	Z, r24
			break;
 7ce:	1a c0       	rjmp	.+52     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
			case B:
			switch (Sentido2)
 7d0:	66 23       	and	r22, r22
 7d2:	41 f0       	breq	.+16     	; 0x7e4 <SetupPWM2+0xda>
 7d4:	61 30       	cpi	r22, 0x01	; 1
 7d6:	59 f4       	brne	.+22     	; 0x7ee <SetupPWM2+0xe4>
			{
				case Positivo:
				TCCR1A|=(1<<COM1B1);
 7d8:	e0 e8       	ldi	r30, 0x80	; 128
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	80 81       	ld	r24, Z
 7de:	80 62       	ori	r24, 0x20	; 32
 7e0:	80 83       	st	Z, r24
				break;
 7e2:	05 c0       	rjmp	.+10     	; 0x7ee <SetupPWM2+0xe4>
				case Invertido:
				TCCR1A|=(1<<COM1B1)|(1<<COM1B0);
 7e4:	e0 e8       	ldi	r30, 0x80	; 128
 7e6:	f0 e0       	ldi	r31, 0x00	; 0
 7e8:	80 81       	ld	r24, Z
 7ea:	80 63       	ori	r24, 0x30	; 48
 7ec:	80 83       	st	Z, r24
				break;
			}
			DDRD |= (1<<PD3);
 7ee:	8a b1       	in	r24, 0x0a	; 10
 7f0:	88 60       	ori	r24, 0x08	; 8
 7f2:	8a b9       	out	0x0a, r24	; 10
			PORTD &= ~(1<<PD3);
 7f4:	8b b1       	in	r24, 0x0b	; 11
 7f6:	87 7f       	andi	r24, 0xF7	; 247
 7f8:	8b b9       	out	0x0b, r24	; 11
			TIMSK2 |= (1<<OCIE2B);
 7fa:	e0 e7       	ldi	r30, 0x70	; 112
 7fc:	f0 e0       	ldi	r31, 0x00	; 0
 7fe:	80 81       	ld	r24, Z
 800:	84 60       	ori	r24, 0x04	; 4
 802:	80 83       	st	Z, r24
			break;
		}
	}
	// PRESCALER
	switch (PrescalerPWM2)
 804:	20 34       	cpi	r18, 0x40	; 64
 806:	31 05       	cpc	r19, r1
 808:	41 f1       	breq	.+80     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 80a:	48 f4       	brcc	.+18     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 80c:	28 30       	cpi	r18, 0x08	; 8
 80e:	31 05       	cpc	r19, r1
 810:	c1 f0       	breq	.+48     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 812:	20 32       	cpi	r18, 0x20	; 32
 814:	31 05       	cpc	r19, r1
 816:	d9 f0       	breq	.+54     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 818:	23 2b       	or	r18, r19
 81a:	b1 f5       	brne	.+108    	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 81c:	0c c0       	rjmp	.+24     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 81e:	21 15       	cp	r18, r1
 820:	81 e0       	ldi	r24, 0x01	; 1
 822:	38 07       	cpc	r19, r24
 824:	31 f1       	breq	.+76     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 826:	21 15       	cp	r18, r1
 828:	84 e0       	ldi	r24, 0x04	; 4
 82a:	38 07       	cpc	r19, r24
 82c:	41 f1       	breq	.+80     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 82e:	20 38       	cpi	r18, 0x80	; 128
 830:	31 05       	cpc	r19, r1
 832:	51 f5       	brne	.+84     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 834:	18 c0       	rjmp	.+48     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
	{
		case 0:
		TCCR2B |= (1<<CS20);
 836:	e1 eb       	ldi	r30, 0xB1	; 177
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	80 81       	ld	r24, Z
 83c:	81 60       	ori	r24, 0x01	; 1
 83e:	80 83       	st	Z, r24
		break;
 840:	23 c0       	rjmp	.+70     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
		case 8:
		TCCR2B |= (1<<CS21);
 842:	e1 eb       	ldi	r30, 0xB1	; 177
 844:	f0 e0       	ldi	r31, 0x00	; 0
 846:	80 81       	ld	r24, Z
 848:	82 60       	ori	r24, 0x02	; 2
 84a:	80 83       	st	Z, r24
		break;
 84c:	1d c0       	rjmp	.+58     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
		case 32:
		TCCR2B |= (1<<CS20)|(1<<CS21);
 84e:	e1 eb       	ldi	r30, 0xB1	; 177
 850:	f0 e0       	ldi	r31, 0x00	; 0
 852:	80 81       	ld	r24, Z
 854:	83 60       	ori	r24, 0x03	; 3
 856:	80 83       	st	Z, r24
		break;
 858:	17 c0       	rjmp	.+46     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
		case 64:
		TCCR2B |= (1<<CS22);
 85a:	e1 eb       	ldi	r30, 0xB1	; 177
 85c:	f0 e0       	ldi	r31, 0x00	; 0
 85e:	80 81       	ld	r24, Z
 860:	84 60       	ori	r24, 0x04	; 4
 862:	80 83       	st	Z, r24
		break;
 864:	11 c0       	rjmp	.+34     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
		case 128:
		TCCR2B |= (1<<CS22)|(1<<CS20);
 866:	e1 eb       	ldi	r30, 0xB1	; 177
 868:	f0 e0       	ldi	r31, 0x00	; 0
 86a:	80 81       	ld	r24, Z
 86c:	85 60       	ori	r24, 0x05	; 5
 86e:	80 83       	st	Z, r24
		break;
 870:	0b c0       	rjmp	.+22     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
		case 256:
		TCCR2B |= (1<<CS22)|(1<<CS21);
 872:	e1 eb       	ldi	r30, 0xB1	; 177
 874:	f0 e0       	ldi	r31, 0x00	; 0
 876:	80 81       	ld	r24, Z
 878:	86 60       	ori	r24, 0x06	; 6
 87a:	80 83       	st	Z, r24
		break;
 87c:	05 c0       	rjmp	.+10     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
		case 1024:
		TCCR2B |= (1<<CS20)|(1<<CS22)|(1<<CS21);
 87e:	e1 eb       	ldi	r30, 0xB1	; 177
 880:	f0 e0       	ldi	r31, 0x00	; 0
 882:	80 81       	ld	r24, Z
 884:	87 60       	ori	r24, 0x07	; 7
 886:	80 83       	st	Z, r24
		break;
	}
	TIMSK2 |= (1<<TOIE2);
 888:	e0 e7       	ldi	r30, 0x70	; 112
 88a:	f0 e0       	ldi	r31, 0x00	; 0
 88c:	80 81       	ld	r24, Z
 88e:	81 60       	ori	r24, 0x01	; 1
 890:	80 83       	st	Z, r24
 892:	08 95       	ret

00000894 <__tablejump2__>:
 894:	ee 0f       	add	r30, r30
 896:	ff 1f       	adc	r31, r31
 898:	05 90       	lpm	r0, Z+
 89a:	f4 91       	lpm	r31, Z
 89c:	e0 2d       	mov	r30, r0
 89e:	09 94       	ijmp

000008a0 <_exit>:
 8a0:	f8 94       	cli

000008a2 <__stop_program>:
 8a2:	ff cf       	rjmp	.-2      	; 0x8a2 <__stop_program>
